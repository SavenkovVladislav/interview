// (!) Переменные let, const и создание функции с помощью function expression не подвержены hoisting'у. При вызове их до определения будет ошибка ReferenceError
// Hoisting или поднятие показывает то, как работает интерпритарор JS с файлами, например
// в данном примере вызвана функция sum до ее определения это работает так, потому что интерпритатор поднимает функцию в начало файла, поэтому мы можем вызвать функцию до ее определения

// (!) ВАЖНЫЙ МОМЕНТ. Поднятие с функциями работает только если функция создается с помощью function declaration, как сделано в примере ниже
console.log(sum())

function sum() {
	return 1 + 2
}

// Еще пример "поднятия"
console.log(i) // undefined // не появилась ошибка потому что интерпритатор знает, что дальше по скрипту данная переменная определена
var i = 'i'
